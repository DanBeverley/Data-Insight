version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    depends_on:
      ollama:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - DATABASE_URL=postgresql://test:testpass@postgres:5432/testdb
      - ENVIRONMENT=test
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  ollama:
    build:
      context: ..
      dockerfile: docker/Dockerfile.ollama
    ports:
      - "11434:11434"
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=testpass
      - POSTGRES_DB=testdb
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test"]
      interval: 5s
      timeout: 5s
      retries: 5

  test-runner:
    build:
      context: ..
      dockerfile: docker/Dockerfile.test
    depends_on:
      app:
        condition: service_healthy
    command: pytest tests/integration/ -v --junit-xml=reports/junit.xml
    volumes:
      - ../reports:/app/reports
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - DATABASE_URL=postgresql://test:testpass@postgres:5432/testdb
      - PYTHONPATH=/app

volumes:
  postgres_data:
